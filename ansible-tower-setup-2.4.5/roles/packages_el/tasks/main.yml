---
# Tasks to install required packages for EL distros

- include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml'           # CentOS-6.5
        - '{{ ansible_os_family }}-{{ ansible_distribution_version }}.yml'              # RedHat-6.5
        - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'     # CentOS-6
        - '{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml'        # RedHat-6
        - '{{ ansible_distribution }}.yml'                                              # CentOS
        - '{{ ansible_os_family }}.yml'                                                 # RedHat
        - 'default.yml'
      paths: '../vars'

- name: Install playbook dependencies
  yum:
    name: '{{ item }}'
    state: installed
  with_items: el_dependencies

- name: Install yum repositories
  copy:
    src: '{{ item }}'
    dest: '/etc/yum.repos.d/{{ item }}'
  with_items: yum_online_repo_files
  when: not bundle_install

- name: Install yum repo keys
  copy:
    src: '{{ item }}'
    dest: '/etc/pki/rpm-gpg/{{ item }}'
  with_items: yum_repo_keys

- name: Determine if rhui repository exists
  stat:
    path: '{{ redhat_rhui_repo_path }}'
  changed_when: false
  register: rhui_repo

- name: Update rh-amazon-rhui-client (RHEL EC2 only)
  yum: name=rh-amazon-rhui-client state=latest
  when: ansible_distribution == 'RedHat' and rhui_repo.stat.exists

- name: Enable rhui repositories
  ini_file:
    dest: '{{ redhat_rhui_repo_path }}'
    section: '{{ item }}'
    option: enabled
    value: 1
  when: ansible_distribution == 'RedHat' and rhui_repo.stat.exists
  with_items: redhat_rhui_repos

- name: Determine if rhsm repository exists
  stat:
    path: '{{ redhat_rhsm_repo_path }}'
  changed_when: false
  register: rhsm_repo

- name: Determine if rhsm system cert exists
  stat:
    path: '{{ redhat_rhsm_cert_path }}'
  changed_when: false
  register: rhsm_cert

- name: Enable rhsm repositories
  command: subscription-manager repos --enable '{{ item }}'
  when: ansible_distribution == 'RedHat' and rhsm_repo.stat.exists and rhsm_cert.stat.exists
  with_items: redhat_rhsm_repos

- name: Remove old bundle packages source directory
  file:
    path: "{{ bundle_install_folder }}"
    state: absent
  when: bundle_install

- name: Copy bundle packages to repo source directory
  copy:
    src: ../../../bundle/repos/
    dest: "{{ bundle_install_folder }}"
  when: bundle_install

- name: Install the Tower bundle repository
  template:
    src: '{{ tower_bundle_file }}'
    dest: /etc/yum.repos.d/ansible-tower.repo
  when: bundle_install

- name: Install the Tower yum repository.
  template:
    src: yum_repo.j2
    dest: /etc/yum.repos.d/ansible-tower.repo
  register: yum_repo
  when: not bundle_install

- name: Set online repo to enable
  set_fact:
    tower_enable_repo: ansible-tower
  when: not bundle_install

- name: Set bundle repo to enable
  set_fact:
    tower_enable_repo: tower
  when: bundle_install

- name: Install the Tower RPM.
  yum:
    name: '{{tower_package_rpm}}'
    enablerepo: "{{ tower_enable_repo }}"
    disable_gpg_check: '{{not gpgcheck|bool}}'
    state: latest
